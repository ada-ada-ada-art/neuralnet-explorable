var updateLoop,weightsTemplate,nodeTemplate,inputNeurons=[],hiddenNeurons=[],outputNeurons=[],inputWeights=[],hiddenWeights=[];$(document).ready(function(){weightsTemplate=$(".nn-weight-form-container.template"),nodeTemplate=$(".nn-node.template"),setupNetwork(2,2,1).then(function(e){console.log(e),updateValues(),updateLoop=setInterval(updateValues,50)},function(e){console.log("Something went wrong: "+e)}),$('input[type="range"]').on("keydown",function(e){"Shift"===e.originalEvent.key&&$(this).attr("step",.5)}),$('input[type="range"]').on("keyup",function(e){"Shift"===e.originalEvent.key&&$(this).attr("step",.001)})});var setupNetwork=function(e,t,n){return new Promise(function(o,a){for(let n=0;n<e;n++){var i=Math.random();inputNeurons.push(i);var u=weightsTemplate.clone();u.appendTo(".nn-weight-forms.nn-input-data").removeClass("template");var r="nn-data-"+n+"-form",d="Input "+n;u.find("label").attr("for",r).text(d).data("label",d),u.find("input").attr("id",r).val(i),(g=nodeTemplate.clone()).appendTo(".nn-inputs").removeClass("template").attr("id","nn-node-i"+n),g.data("value",i).text(i.toFixed(2)),inputWeights.push([]);for(let e=0;e<t;e++){var l=Math.random();inputWeights[n].push(l),(h=weightsTemplate.clone()).appendTo(".nn-weight-forms.nn-input-weights").removeClass("template");var s="nn-i"+n+"-h"+e+"-form",p="In "+n+" / Hid "+e;h.find("label").attr("for",s).text(p).data("label",p),h.find("input").attr("id",s).val(l)}}for(let e=0;e<t;e++){i=Math.random();hiddenNeurons.push(i),(g=nodeTemplate.clone()).appendTo(".nn-hiddens").removeClass("template").attr("id","nn-node-h"+e),g.data("value",i).text(i.toFixed(2)),hiddenWeights.push([]);for(let t=0;t<n;t++){var h;l=Math.random();hiddenWeights[e].push(l),(h=weightsTemplate.clone()).appendTo(".nn-weight-forms.nn-hidden-weights").removeClass("template");s="nn-h"+e+"-o"+t+"-form",p="Hid "+e+" / Out "+t;h.find("label").attr("for",s).text(p).data("label",p),h.find("input").attr("id",s).val(l)}}for(let e=0;e<n;e++){var g;i=Math.random();outputNeurons.push(i),(g=nodeTemplate.clone()).appendTo(".nn-outputs").removeClass("template").attr("id","nn-node-o"+e),g.data("value",i).text(i.toFixed(2))}$(".template").remove(),o("Network succesfully created.")})},toggleLabels=function(e,t){var n=e.siblings("label");t?n.text(e.val()):n.text(n.data("label"))},updateValues=function(){for(let n=0;n<inputNeurons.length;n++){var e="nn-data-"+n+"-form";inputNeurons[n]=$("#"+e).get(0).valueAsNumber;for(let e=0;e<hiddenNeurons.length;e++){var t="nn-i"+n+"-h"+e+"-form";inputWeights[n][e]=$("#"+t).val()}}for(let e=0;e<hiddenNeurons.length;e++)for(let n=0;n<outputNeurons.length;n++){t="nn-h"+e+"-o"+n+"-form";hiddenWeights[e][n]=$("#"+t).val()}for(let e=0;e<inputNeurons.length;e++)for(let t=0;t<hiddenNeurons.length;t++){inputWeights[e][t];hiddenNeurons[t]+=inputNeurons[e]*inputWeights[e][t]}for(let e=0;e<hiddenNeurons.length;e++)hiddenNeurons[e]=sigmoid(hiddenNeurons[e]);for(let e=0;e<hiddenNeurons.length;e++)for(let t=0;t<outputNeurons.length;t++){hiddenWeights[e][t];outputNeurons[t]+=hiddenNeurons[e]*hiddenWeights[e][t]}for(let e=0;e<outputNeurons.length;e++)outputNeurons[e]=sigmoid(outputNeurons[e]);updateLabels()},updateLabels=function(){$('input[type="range"]').each(function(e){$(this).is(":hover")?toggleLabels($(this),!0):toggleLabels($(this),!1)});for(let e=0;e<inputNeurons.length;e++)$("#nn-node-i"+e).text(inputNeurons[e].toFixed(2));for(let e=0;e<hiddenNeurons.length;e++)$("#nn-node-h"+e).text(hiddenNeurons[e].toFixed(2));for(let e=0;e<outputNeurons.length;e++)$("#nn-node-o"+e).text(outputNeurons[e].toFixed(2))},map=function(e,t,n,o,a){return e<t?o:e>n?a:(e-t)*(a-o)/(n-t)+o},sigmoid=function(e){return 1/(1+Math.exp(-e))};